<?php

/**
 * @file
 * Primary module hooks for MHI Components module.
 */

use Drupal\Core\Render\Markup;
use Drupal\Core\Url;

\Drupal::moduleHandler()->loadInclude('mhi_rss', 'schema_alter.inc');

/**
 * Implements hook_views_rss_item_elements().
 */
function mhi_rss_views_rss_channel_elements() {
  $elements['linkDisplay'] = [
    'title' => t('Link Display'),
    'description' => t('Link Display for this feed. If left blank, the default site link will be used.'),
    'help' => 'http://www.rssboard.org/rss-profile#element-channel-link',
  ];
  return $elements;
}

/**
 * Implements hook_views_rss_item_elements().
 */
function mhi_rss_views_rss_item_elements() {
  $elements['issueNo'] = [];
  $elements['letterNo'] = [];
  return $elements;
}

/**
 * Implements hook_preprocess_views_view_rss().
 */
function mhi_rss_preprocess_views_view_rss(&$variables) {
  if (isset($variables['options']['channel'])) {
    $view = $variables['view'];
    // Current pubDate.
    $item = !empty($variables['items']) ? $variables['items'][0]['#row']->elements : NULL;
    $item = !empty($item) ? array_column($item, 'value', 'key') : NULL;
    $pubDate = ($item && isset($item['pubDate'])) ? $item['pubDate'] : NULL;
    // Channel elements.
    $style = $view->style_plugin;
    $channel_elements_string = '';
    foreach ($style->channel_elements as $channel_element) {
      if (is_array($channel_element) && isset($channel_element['#type']) && isset($channel_element['#tag']) && isset($channel_element['#markup'])) {
        // Remove linkDisplay and atom:link in elements.
        if ($channel_element['#type'] == 'html_tag' && !in_array($channel_element['#tag'], ['linkDisplay', 'atom:link'])) {
          $channel_elements_string .= $channel_element['#markup']->jsonSerialize();
        }
      }
    }
    $variables['channel_elements'] = Markup::create($channel_elements_string);
    if($channel_elements_string) {
      $variables['channel_elements']['pubDate'] = [
        '#type' => 'html_tag',
        '#tag' => 'pubDate',
        '#value' => $pubDate,
      ];
    } else {
      $variables['channel_elements'] = ['pubDate' =>
        ['#type' => 'html_tag',
        '#tag' => 'pubDate',
        '#value' => $pubDate,]
      ];
    }

    // Override: link display, description.
    $mhi_rss_options = $variables['options']['channel']['core']['mhi_rss'] ?? [];
    $views_rss_core_options = $variables['options']['channel']['core']['views_rss_core'] ?? [];
    if (isset($mhi_rss_options['linkDisplay'])) {
      $variables['link'] = Url::fromUserInput($mhi_rss_options['linkDisplay'], ['absolute' => TRUE])->toString();
    }
    if (isset($views_rss_core_options['description'])) {
      $variables['description'] = $views_rss_core_options['description'];
    }
  }
  // Http Content type.
  if (empty($variables['view']->live_preview)) {
    $variables['view']->getResponse()->headers->set('Content-Type', 'application/xml; charset=utf-8');
  }
}

/**
 * Implements hook_preprocess_views_view_row_rss().
 */
function mhi_rss_preprocess_views_view_row_rss(&$variables) {
  $item = $variables['row'];
  $category_details = [];
  foreach ($item->elements as $key => $element) {
    if (isset($element['key']) && $element['key'] == 'source') {
      unset($variables['row']->elements[$key]);
    }

    if (isset($element['key']) && $element['key'] == 'category') {
      if (!empty($element['value'])) {
        $category_details[] = $element['value'];
      }
    }

    if (count($category_details) != 0) {
      // Print only child term.
      $category_value = [];
      foreach ($category_details as $key => $category) {
        $category_value = explode('/',$category);
        $category_details[$key] = end($category_value);
      }

      $variables['custom_category'] = implode(",", $category_details);
      // Remove the 'category' element from the 'item_elements' list.
      unset($variables['row']->elements[$key]);
    }    
  }

  $variables['item_elements'] = $variables['row']->elements;
}
